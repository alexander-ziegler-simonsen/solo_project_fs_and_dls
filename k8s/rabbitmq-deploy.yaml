apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-svc
  namespace: ors
  labels:
    app: rabbitmq-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-svc
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rabbitmq-svc
    spec:
      initContainers:
        - name: wait-for-volume
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              "until [ -e /init-ready ]; do echo waiting for volume...; sleep 2; done",
            ]
          volumeMounts:
            - name: rabbitmq-pvc
              mountPath: /init-ready
      containers:
        - name: rabbitmq-svc
          image: my-rabbitmq
          envFrom:
            - secretRef:
                name: app-env-secret
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "check_running"]
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "check_running"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-pvc
      restartPolicy: Always
      volumes:
        - name: rabbitmq-pvc
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
