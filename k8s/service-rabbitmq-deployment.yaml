apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.node-selector: ors-data
    kompose.service.type: nodeport
  labels:
    io.kompose.service: service-rabbitmq
  name: service-rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: service-rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.node-selector: ors-data
        kompose.service.type: nodeport
      labels:
        io.kompose.service: service-rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: app-env-secret
                  key: RABBITMQ_DEFAULT_PASS
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: app-env-secret
                  key: RABBITMQ_DEFAULT_USER
          image: ghcr.io/alexander-ziegler-simonsen/my-rabbitmq:latest
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - check_running
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: service-rabbitmq
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmqdata
      restartPolicy: Always
      volumes:
        - name: rabbitmqdata
          persistentVolumeClaim:
            claimName: rabbitmqdata
